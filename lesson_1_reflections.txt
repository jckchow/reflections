How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It highlights lines that are different between two files

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can always go back to an older version of the code

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    You can have many local version for testing and only merge the good version

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    You can make sure all the codes are updated and won't break in any of the versions

How can you use the commands git log and git diff to view the history of files?

    git log shows the comments for every commit, while git diff shows the difference between two files

How might using version control make you more confident to make changes that
could break something?

    You can always go back to a older working copy while you play with a local copy

Now that you have your workspace set up, what do you want to try using Git for?

    Uploading and download code

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

	Pro is you can commit when it makes sense. Con is that is requires more thinking from the user.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

	Some files might be related and it makes more sense to commit them as a group